"""
이코테 1이 될 때까지 문제
어떠한 수 N이 1이 될 때까지 1. N에서 1을 뺀다 / 2.N을 K로 나눈다.
이 두가지의 행동을 할 수 있음.
N을 1로 만드는 최소 횟수를 구하기
2<=N<=100,000 / 2<=k<=100,000

이 문제는 K>=2이므로 무조건 k로 나눌수 있을 때까지 나눗셈을 하는 과정을 해야한다.
여기서 for문을 이용하여 계속 나눌수도 있지만 시간복잡도를 효율적으로 고려하면 큰 수의 법칙처럼 수학적 원리를 고려하는 것이 좋음.
"""

n,k=map(int,input().split())
count=0
while True:
    if n==1:
        break
    if n>=k:
        count+=n-(n//k)*k+1 #이 부분은 1을 빼는 부분 >> 수학적으로 한번에 처리 / n을 k로 나누는 부분(+1)
        n=n//k
    else:
        break
count+=n-1
print(count)


